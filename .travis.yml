language: bash
services: docker
sudo: required

env:
  global:
    - REGISTRY=carlosedp
    - QEMU_VERSION=v2.11.0
  matrix:
    - IMAGE=prometheus TAG=arm QEMU_ARCH=arm ARCH=armv7
    - IMAGE=node_exporter TAG=arm QEMU_ARCH=arm ARCH=armv7
    - IMAGE=alertmanager TAG=arm QEMU_ARCH=arm ARCH=armv7
    - IMAGE=blackbox_exporter TAG=arm QEMU_ARCH=arm ARCH=armv7
    - IMAGE=snmp_exporter TAG=arm QEMU_ARCH=arm ARCH=armv7
    - IMAGE=prometheus TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64
    - IMAGE=node_exporter TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64
    - IMAGE=alertmanager TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64
    - IMAGE=blackbox_exporter TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64
    - IMAGE=snmp_exporter TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64

install:
  - docker run --rm --privileged multiarch/qemu-user-static:register

script:
# Download
  - git clone https://github.com/prometheus/${IMAGE}
  - curl -L -o qemu-${QEMU_ARCH}-static.tar.gz https://github.com/multiarch/qemu-user-static/releases/download/${QEMU_VERSION}/qemu-${QEMU_ARCH}-static.tar.gz && tar zx -f qemu-${QEMU_ARCH}-static.tar.gz -C ${IMAGE}
  - 'DOWNLOAD_URL=$(curl -s -H "Authorization: token ${GITHUB_TOKEN}" https://api.github.com/repos/prometheus/${IMAGE}/releases/latest | grep "browser_download_url" | grep "linux-${ARCH}" | cut -d\" -f4)'
  - VERSION=v$(echo ${DOWNLOAD_URL}|sed 's/.*\/v\([0-9.]*\)\/.*/\1/')
  - echo Processing ${IMAGE} version ${VERSION}
  - curl -L -o ${IMAGE}.tar.gz ${DOWNLOAD_URL} && tar zx -f ${IMAGE}.tar.gz --strip-components=1 -C ${IMAGE}
# Build
  - if [ "$IMAGE" == "snmp_exporter" ]; then
      cp -rf snmp.yml ${IMAGE}/snmp.yml ;
    fi
  - patch ${IMAGE}/Dockerfile Dockerfile.${IMAGE}-${TAG}.patch
  - docker build -t ${REGISTRY}/${IMAGE}:${VERSION}-${TAG} ${IMAGE}
# Check
  - docker images
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
      docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" ;
      docker push ${REGISTRY}/${IMAGE}:${VERSION}-${TAG} ;
    fi

jobs:
  include:
    - stage: manifest
      env: IMAGE=prometheus TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64
      script: ./create_manifest.sh
    - stage: manifest
      env: IMAGE=node_exporter TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64
      script: ./create_manifest.sh
    - stage: manifest
      env: IMAGE=alertmanager TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64
      script: ./create_manifest.sh
    - stage: manifest
      env: IMAGE=blackbox_exporter TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64
      script: ./create_manifest.sh
    - stage: manifest
      env: IMAGE=snmp_exporter TAG=arm64 QEMU_ARCH=aarch64 ARCH=arm64
      script: ./create_manifest.sh

